import RPi.GPIO as GPIO
import time

class BuzzerMusic:

    def __init__(self, pin):
        self.buzzerPin = pin
        GPIO.setwarnings(False)
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(self.buzzerPin, GPIO.OUT, initial=GPIO.HIGH)
        pass

    def default(self,buzzerPin):
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.5)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.2)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.2)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.5)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.8)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.3)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.5)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.3)
        GPIO.output(buzzerPin,GPIO.HIGH)

    def starWars(self,buzzerPin):
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)

        time.sleep(0.8)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.8)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)

        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.8)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.4)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)

        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.15)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)
        GPIO.output(buzzerPin, GPIO.LOW)
        time.sleep(0.4)
        GPIO.output(buzzerPin,GPIO.HIGH)
        time.sleep(0.1)

    def destroy():
    # Release resource
        GPIO.output(self.buzzerPin, GPIO.HIGH)
        GPIO.cleanup()
        pass